
> @3.5.4 test /root/vue
> vitest "packages/compiler-sfc/__tests__/compileStyle.spec.ts" "--no-watch" "--reporter=verbose"


 RUN  v2.0.5 /root/vue

 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > simple selectors
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > descendent selector
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > nesting selector
 × packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > nesting selector with atrule and comment
   → expected 'h1 {\n&[data-v-test] {\ncolor: red\n}…' to match 'h1 {\n&[data-v-test] {\ncolor: red\n/…'
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > multiple selectors
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > pseudo class
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > pseudo element
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > spaces before pseudo element
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > ::v-deep
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > ::v-slotted
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > ::v-global
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > :is() and :where() with multiple selectors
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > :is() and :where() in compound selectors
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > media query
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > supports query
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > scoped keyframes
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > spaces after selector
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > deprecated syntax > ::v-deep as combinator
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > deprecated syntax > >>> (deprecated syntax)
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > deprecated syntax > /deep/ (deprecated syntax)
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC CSS modules > should include resulting classes object in result
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC CSS modules > postcss-modules options
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC style preprocessors > scss @import 433ms
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC style preprocessors > scss respect user-defined string options.additionalData
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC style preprocessors > scss respect user-defined function options.additionalData
 ✓ packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC style preprocessors > should mount scope on correct selector when have universal selector

⎯⎯⎯⎯⎯⎯⎯ Failed Tests 1 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  packages/compiler-sfc/__tests__/compileStyle.spec.ts > SFC scoped CSS > nesting selector with atrule and comment
AssertionError: expected 'h1 {\n&[data-v-test] {\ncolor: red\n}…' to match 'h1 {\n&[data-v-test] {\ncolor: red\n/…'

- Expected
+ Received

  h1 {
  &[data-v-test] {
  color: red
+ }
  /*background-color: pink;*/
- }
  @media only screen and (max-width: 800px) {
- &[data-v-test] {
-   background-color: green
- }
+   background-color: green;
  .bar[data-v-test] { color: white
  }
  }
  .foo[data-v-test] { color: red;
  }
  }

 ❯ packages/compiler-sfc/__tests__/compileStyle.spec.ts:63:7
     61| }`,
     62|       ),
     63|     ).toMatch(
       |       ^
     64|       `h1 {
     65| &[data-v-test] {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/1]⎯

 Test Files  1 failed (1)
      Tests  1 failed | 25 passed (26)
   Start at  23:43:12
   Duration  3.75s (transform 2.20s, setup 37ms, collect 2.66s, tests 541ms, environment 1ms, prepare 169ms)

 ELIFECYCLE  Test failed. See above for more details.
