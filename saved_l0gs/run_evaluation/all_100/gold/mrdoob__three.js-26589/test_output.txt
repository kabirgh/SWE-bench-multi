+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch dev
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   src/objects/Line.js
	modified:   src/objects/Mesh.js
	modified:   src/objects/Points.js

no changes added to commit (use "git add" and/or "git commit -a")
+ git diff 8d9f8d50b923d5f8a673590ae138bc5d86a3a256
diff --git a/src/objects/Line.js b/src/objects/Line.js
index e359bcfb29..6a6d0d4e2c 100644
--- a/src/objects/Line.js
+++ b/src/objects/Line.js
@@ -34,7 +34,7 @@ class Line extends Object3D {
 
 		super.copy( source, recursive );
 
-		this.material = source.material;
+		this.material = Array.isArray( source.material ) ? source.material.slice() : source.material;
 		this.geometry = source.geometry;
 
 		return this;
diff --git a/src/objects/Mesh.js b/src/objects/Mesh.js
index 03f5290243..38b07c6fa7 100644
--- a/src/objects/Mesh.js
+++ b/src/objects/Mesh.js
@@ -65,7 +65,7 @@ class Mesh extends Object3D {
 
 		}
 
-		this.material = source.material;
+		this.material = Array.isArray( source.material ) ? source.material.slice() : source.material;
 		this.geometry = source.geometry;
 
 		return this;
diff --git a/src/objects/Points.js b/src/objects/Points.js
index 8da688140b..20122389c4 100644
--- a/src/objects/Points.js
+++ b/src/objects/Points.js
@@ -32,7 +32,7 @@ class Points extends Object3D {
 
 		super.copy( source, recursive );
 
-		this.material = source.material;
+		this.material = Array.isArray( source.material ) ? source.material.slice() : source.material;
 		this.geometry = source.geometry;
 
 		return this;
+ git checkout 8d9f8d50b923d5f8a673590ae138bc5d86a3a256 test/unit/src/objects/Line.tests.js test/unit/src/objects/Mesh.tests.js test/unit/src/objects/Points.tests.js
Updated 0 paths from 2f4477c1a3
+ git apply -v -
Checking patch test/unit/src/objects/Line.tests.js...
Checking patch test/unit/src/objects/Mesh.tests.js...
Checking patch test/unit/src/objects/Points.tests.js...
Applied patch test/unit/src/objects/Line.tests.js cleanly.
Applied patch test/unit/src/objects/Mesh.tests.js cleanly.
Applied patch test/unit/src/objects/Points.tests.js cleanly.
+ npx qunit test/unit/src/objects/Line.tests.js test/unit/src/objects/Mesh.tests.js test/unit/src/objects/Points.tests.js
TAP version 13
ok 1 Objects > Line > Extending
ok 2 Objects > Line > Instancing
ok 3 Objects > Line > type
not ok 4 # TODO Objects > Line > geometry
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:44:11)
  ...
not ok 5 # TODO Objects > Line > material
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:50:11)
  ...
ok 6 Objects > Line > isLine
not ok 7 # TODO Objects > Line > copy
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:67:11)
  ...
ok 8 Objects > Line > copy/material
not ok 9 # TODO Objects > Line > computeLineDistances
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:90:11)
  ...
not ok 10 # TODO Objects > Line > raycast
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:96:11)
  ...
not ok 11 # TODO Objects > Line > updateMorphTargets
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:102:11)
  ...
not ok 12 # TODO Objects > Line > clone
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Line.tests.js:109:11)
  ...
ok 13 Objects > Mesh > Extending
ok 14 Objects > Mesh > Instancing
ok 15 Objects > Mesh > type
not ok 16 # TODO Objects > Mesh > geometry
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:50:11)
  ...
not ok 17 # TODO Objects > Mesh > material
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:56:11)
  ...
ok 18 Objects > Mesh > isMesh
not ok 19 # TODO Objects > Mesh > copy
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:73:11)
  ...
ok 20 Objects > Mesh > copy/material
not ok 21 # TODO Objects > Mesh > updateMorphTargets
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:96:11)
  ...
not ok 22 # TODO Objects > Mesh > getVertexPosition
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:102:11)
  ...
not ok 23 # TODO Objects > Mesh > raycast
  ---
  message: intersction face index
  severity: todo
  actual  : 0
  expected: 1
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:125:11)
  ...
  ---
  message: intersction vertex indices
  severity: todo
  actual  : {
  "a": 0,
  "b": 2,
  "c": 1,
  "normal": {
    "x": 0,
    "y": 0,
    "z": 1
  },
  "materialIndex": 0
}
  expected: {
  "a": 0,
  "b": 2,
  "c": 1
}
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Mesh.tests.js:126:11)
  ...
ok 24 Objects > Mesh > raycast/range
ok 25 Objects > Points > Extending
ok 26 Objects > Points > Instancing
ok 27 Objects > Points > type
not ok 28 # TODO Objects > Points > geometry
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Points.tests.js:43:11)
  ...
not ok 29 # TODO Objects > Points > material
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Points.tests.js:49:11)
  ...
ok 30 Objects > Points > isPoints
not ok 31 # TODO Objects > Points > copy
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Points.tests.js:66:11)
  ...
ok 32 Objects > Points > copy/material
not ok 33 # TODO Objects > Points > raycast
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Points.tests.js:89:11)
  ...
not ok 34 # TODO Objects > Points > updateMorphTargets
  ---
  message: "everything's gonna be alright"
  severity: todo
  actual  : false
  expected: true
  stack: |
        at Object.<anonymous> (file:///testbed/test/unit/src/objects/Points.tests.js:95:11)
  ...
1..34
# pass 16
# skip 0
# todo 18
# fail 0
+ git checkout 8d9f8d50b923d5f8a673590ae138bc5d86a3a256 test/unit/src/objects/Line.tests.js test/unit/src/objects/Mesh.tests.js test/unit/src/objects/Points.tests.js
Updated 3 paths from 2f4477c1a3
