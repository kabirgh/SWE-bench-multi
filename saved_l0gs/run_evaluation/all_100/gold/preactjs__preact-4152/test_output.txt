+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   src/diff/children.js

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	benchmarks/

no changes added to commit (use "git add" and/or "git commit -a")
+ git diff 9c5a82efcc3dcbd0035c694817a3022d81264687
diff --git a/src/diff/children.js b/src/diff/children.js
index 35874a64..9d5d9855 100644
--- a/src/diff/children.js
+++ b/src/diff/children.js
@@ -69,7 +69,7 @@ export function diffChildren(
 		// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have
 		// it's own DOM & etc. pointers
 		else if (
-			typeof childVNode == 'string' ||
+			childVNode.constructor === String ||
 			typeof childVNode == 'number' ||
 			// eslint-disable-next-line valid-typeof
 			typeof childVNode == 'bigint'
+ git checkout 9c5a82efcc3dcbd0035c694817a3022d81264687 test/browser/components.test.js
Updated 0 paths from eb6ec1b1
+ git apply -v -
Checking patch test/browser/components.test.js...
Applied patch test/browser/components.test.js cleanly.
+ COVERAGE=false
+ BABEL_NO_MODULES=true
+ npx karma start karma.conf.js --single-run --grep=test/browser/components.test.js

START:
[32m04 10 2024 12:48:39.559:INFO [esbuild]: [39mCompiling...
Browserslist: caniuse-lite is outdated. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
[32m04 10 2024 12:48:42.570:INFO [esbuild]: [39mCompiling done (3s)
[32m04 10 2024 12:48:42.575:INFO [karma-server]: [39mKarma v6.3.16 server started at http://localhost:9876/
[32m04 10 2024 12:48:42.576:INFO [launcher]: [39mLaunching browsers ChromeNoSandboxHeadless with concurrency 2
[32m04 10 2024 12:48:42.582:INFO [launcher]: [39mStarting browser Chrome
[32m04 10 2024 12:48:44.143:INFO [Chrome Headless 129.0.0.0 (Linux x86_64)]: [39mConnected on socket 1KYMk7yxbPGtsBAaAAAB with id 56890861
  Components
    âœ” should render string
    âœ” should render number as string
    âœ” should render a new String()
    âœ” should render null as empty string
    âœ” should remove orphaned elements replaced by Components
    âœ” should remove children when root changes to text node
    âœ” should maintain order when setting state (that inserts dom-elements)
    âœ” should not recycle common class children with different keys
    âœ” should set component._vnode._dom when sCU returns false
    âœ” should handle hoisted component vnodes without DOM
    Component construction
      âœ” should render components
      âœ” should render functional components
      âœ” should render components with props
      âœ” should not crash when setting state in constructor
      âœ” should not crash when setting state with cb in constructor
      âœ” should not crash when calling forceUpdate with cb in constructor
      âœ” should accurately call nested setState callbacks
      âœ” should initialize props & context but not state in Component constructor
      âœ” should render Component classes that don't pass args into the Component constructor
      âœ” should also update the current dom
      âœ” should not orphan children
      âœ” should render components that don't pass args into the Component constructor (unistore pattern)
      âœ” should render components that don't call Component constructor
      âœ” should render components that don't call Component constructor and don't initialize state
      âœ” should render components that don't inherit from Component
      âœ” should render components that don't inherit from Component (unistore pattern)
      âœ” should render components that don't inherit from Component and don't initialize state
      âœ” should render class components that inherit from Component without a render method
    array children
      âœ” should render DOM element's array children
      âœ” should render Component's array children
      âœ” should render Fragment's array children
      âœ” should render sibling array children
    props.children
      âœ” should support passing children as a prop
      âœ” should be ignored when explicit children exist
      âœ” should be undefined with no child
      âœ” should be null with null as a child
      âœ” should be false with false as a child
      âœ” should be true with true as a child
      âœ” should be a string with a text child
      âœ” should be a string with a number child
      âœ” should be a VNode with a DOM node child
      âœ” should be a VNode with a Component child
      âœ” should be a function with a function child
      âœ” should be an array with multiple children
      âœ” should be an array with an array as children
      âœ” should not flatten sibling and nested arrays
    High-Order Components
      âœ” should render wrapper HOCs
      âœ” should render HOCs with generic children
      âœ” should render nested functional components
      âœ” should re-render nested functional components
      âœ” should re-render nested components
      âœ” should resolve intermediary functional component
      âœ” should unmount children of high-order components without unmounting parent
      âœ” should remount when swapping between HOC child types
    Component Nesting
      âœ” should handle lifecycle for no intermediary in component tree
      âœ” should handle lifecycle for nested intermediary functional components
      âœ” should render components by depth
      âœ” should handle lifecycle for nested intermediary elements
    c.base
      âœ” should keep c.base up to date if a nested child component changes DOM nodes
      âœ” should not update sibling c.base if child component changes DOM nodes
      âœ” should not update parent c.base if child component changes DOM nodes and it is not first child component
      âœ” should update parent c.base if child component changes DOM nodes and it is first non-null child component
      âœ” should not update parent c.base if child component changes DOM nodes and a parent is not first child component
      âœ” should update parent c.base if first child becomes null
      âœ” should update parent c.base if first child becomes non-null
      âœ” should update parent c.base if first non-null child becomes null with multiple null siblings
      âœ” should update parent c.base if a null child returns DOM with multiple null siblings
      âœ” should update parent c.base to null if last child becomes null
      âœ” should update parent c.base if last child returns dom
      âœ” should not update parent if it is a DOM node
    setState
      âœ” should not error if called on an unmounted component
      âœ” setState callbacks should have latest state, even when called in render
      âœ” should work with readonly state
    forceUpdate
      âœ” should not error if called on an unmounted component
      âœ” should update old dom on forceUpdate in a lifecycle
      âœ” should skip shouldComponentUpdate when called during render
      âœ” should break through strict equality optimization

Finished in 0.117 secs / 0.071 secs @ 12:48:44 GMT+0000 (Coordinated Universal Time)

SUMMARY:
âœ” 77 tests completed
+ git checkout 9c5a82efcc3dcbd0035c694817a3022d81264687 test/browser/components.test.js
Updated 1 path from eb6ec1b1
